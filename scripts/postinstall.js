var fs = require('fs'),
    _ = require('underscore');

var tests = {};
var data = ["//generated by postintall.js on " + (new Date()).toString() + "\n" ];
data.push("var fs = require('fs');\n");
data.push("var tests = {};\n");
data.push("tests.fixtures = {};\n");
readDir("tests/fixtures", data);
// console.log(data.join(""));

var fixtures_js = "tests/fixtures.js";
fs.writeFile(fixtures_js, data.join(""), function (err, fd) {
  if (err) console.log(err);
  console.log(fixtures_js + " is generated.");
});

/**
 * conver the path to objects
 * tests/fixtures/forms --> tests.fixtures.forms = {};
 * tests/fixtures/forms/invalid.json --> tests.fixtures.forms.invalid
 * @param  {[type]} path [description]
 * @return {[type]}      [description]
 */
function pathToObjName (path) {
  var objName = path.split("/").join(".");
  var i;
  if ((i = objName.indexOf(".json")) > 0) {
    objName = objName.substring(0, i);
  }
  //replace all the characters not in [A-Za-z0-9\_\.] with _
  var p = /[^A-Za-z0-9\_\.]/g;
  return objName.replace(p, "_");
}

function getLineData (fpath, isFile) {
  if (isFile) {
    return  pathToObjName(fpath) + " = JSON.parse(fs.readFileSync('" +
         fpath + "'));\n";
  } else {
    return  pathToObjName(fpath) + " = {};\n";
  }
}

function readDir (dirName, data) {
  var files = fs.readdirSync(dirName);
  var fstats, fpath;
  _.each(files, function (element, index){
    fpath = dirName + "/" + element;
    fstats = fs.statSync(fpath);
    if (fstats.isDirectory()){
      data.push(getLineData(fpath, false));
      readDir(fpath, data);
    } else if (fstats.isFile()) {
      data.push(getLineData(fpath, true));
    }
  });
}
